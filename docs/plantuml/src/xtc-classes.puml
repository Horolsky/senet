@startuml xtc-classes
    
    package "game object classes"
    {
        class Unit <<(E, White)>>
        class Action <<(E, White)>>
        class State <<(O, White)>>
        class StrategyNode <<(O, White)>>
        class ChanceNode <<(O, White)>>
        class Strategies <<(O, White)>>
        
    }
    package "algorithmic functors and utils" 
    {
        class Dice <<(O, White)>>
        class Eval <<(F, White)>>
        class Emax <<(F, White)>>
    }

    class Unit 
    {
        X
        Y
        NONE   
    }
    class Action 
    {
        SKIP
        MOVE
        RETREAT
        SWAPBACK
        DROW
        ATTACK
        ATTACK_HOUSE
        ESCAPE
        PANIC
    }
    class Dice
    {
        +Dice()
        +int roll()
        +int[4] sticks
    }
    class Strategies
    {
        +Strategies(int seed)
        +Unit agent
        +int mobility
        +int[] indici
        +Action[] actions
    }
    class State
    {
        {static} int build_seed(Unit agent, int steps, int[30] board)
        +State(int seed)        

        +Unit agent
        +int steps
        +Unit[30] board

        +bool is_chance_node
        +bool is_strategy_node
        +bool is_terminal_node
    }
    class StrategyNode
    {
        +Strategies strategies
        +ChanceNode choice(int index)
    }
    class ChanceNode
    {
        +StrategyNode chance(int chance)
    }
    'FUNCTORS
    class Eval
    {
        +Eval(options)
        +call(State state)
    }
    class Emax
    {
        +Emax(options)
        +call(StrategyNode state)
    }

    ' State *-left- Unit
    ' StrategyNode *-- Strategies
    ' Strategies *-right- Action
    ChanceNode *-[hidden]- Action
    Action *-left[hidden]- Strategies
    Strategies *-left[hidden]- Unit
    
    State <|-- StrategyNode
    State <|-- ChanceNode

    Eval *-up[hidden]- Dice
    Emax *-up[hidden]- Eval
    
    
    
@enduml